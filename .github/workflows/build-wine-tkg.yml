name: Build Wine TKG

on:
  repository_dispatch:
    types:
      - TKG/wine
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - uses: actions/checkout@v2
      - name: Compile
        run: |
          echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          pacman -Syu --noconfirm base-devel sudo git github-cli openssh gnupg coreutils rsync
          git clone https://github.com/Frogging-Family/wine-tkg-git.git
          
          useradd user -G wheel && echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown user -R .
          cd wine-tkg-git/wine-tkg-git
          # Workaround for jack&jack2 conflict https://github.com/Frogging-Family/wine-tkg-git/issues/237
          sed -i "/'jack2'                 'lib32-jack2'/d" PKGBUILD
          sed -i "/'gst-plugins-good'      'lib32-gst-plugins-good'/d" PKGBUILD 
          #su user -c "yes|PKGDEST=/tmp/wine-tkg makepkg --noconfirm -s"
          #su user -c "yes|makepkg --noconfirm -s"
          
      - name: sign package
        shell: bash -O extglob {0}
        run: |
          # "Assinar Pacote"
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import &>/dev/null
          cd wine-tkg-git/wine-tkg-git
          for p in $(find $PWD -maxdepth 1 -regex '.*\.pkg\.tar\.\(xz\|zst\)'); do
            gpg --pinentry-mode loopback --passphrase "${{ secrets.PASSPHRASE }}" --detach-sign ${p}
          done
        
      - name: CheckSum
        shell: bash -O extglob {0}
        run: |
          # "Checksum"
          
          cd wine-tkg-git/wine-tkg-git
          echo '#!/bin/bash
          for i in $(ls *.zst); do md5sum $i >> $i.md5; done
          for i in $(ls *.sig | sed 's/.sig//'); do md5sum $i.sig >> $i.md5; done
          exit 0' > md5.sh
          bash md5.sh
          
      #- name: Publish Package on GitHub
        #shell: bash
        #run: |
          #release=$(find . -name *.zst | cut -d "/" -f2)
          #echo ${{ github.token }} | gh auth login --with-token
          #cd wine-tkg-git/wine-tkg-git
          #ls -lh
          #gh release create ${release} --title ${release} --repo ${{ github.repository }} --notes "automated release from ${{ github.event.client_payload.url }}" || echo "release already exists"
          #GITHUB_LINK=https://github.com/${GITHUB_REPOSITORY}/releases/download/${release}
          #for i in .zst .sig .tar .md5; do
          #find -iname "*$i" -exec gh release upload ${release} --repo ${GITHUB_REPOSITORY} --clobber {} \;
          #done
          
      - name: Push to Repo
        shell: bash
        run: |
          echo "## ssh setup"
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          ssh-agent -a /tmp/ssh_agent.sock > /dev/null
          echo "${{ secrets.PKGBUILD_KEY }}" >> /home/runner/.ssh/id_rsa
          eval `ssh-agent -s`
          ssh-add /home/runner/.ssh/id_rsa
          ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} ${{ secrets.PKGBUILD_HOST }} >> /home/runner/.ssh/known_hosts
          
          #cd wine-tkg-git/wine-tkg-git
          #ls -lh
          #if [ -n "$(echo ${{ github.event.client_payload.branch }} | grep stable )" ];then branch=stable; else branch=testing; fi
          ##for i in *.zst *.sig *.md5; do
          ##test -e $i && rsync -vapz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }}:${{ secrets.PKGBUILD_DIR }}/$branch
          ##sleep 10
          ##done
          ##exit 0
          
          rsync -vapz -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.PKGBUILD_PORT }}" PKGBUILD ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }}:${{ secrets.PKGBUILD_DIR }}/$branch
          
      #- name: Telegram Alert Fail
        #if: ${{ failure() || cancelled() }}
        #run: |
          #curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "FALHA ao criar Pacote: ${{ github.event.action }} a partir do branch ${{ github.ref_name }}, link do erro: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "disable_notification": false}' ${{ secrets.MESSAGE_BOT_KEY }}
