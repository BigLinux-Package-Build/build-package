name: Build Package

# Controls when the workflow will run
on:
  repository_dispatch:
    types:
      # - biglinux/*
      - AUR/*
      # - xivastudio/*
      - URL/*
      - BigLinuxAur/*

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'With TMATE'
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: echo PayLoads
        run: |
          echo PayLoads
          if [ -z "${{ github.event.client_payload.manjaro_branch }}" ];then
            echo "manjaro_branch=stable" >> $GITHUB_ENV
          else
            echo "manjaro_branch=${{ github.event.client_payload.manjaro_branch }}" >> $GITHUB_ENV
          fi
          echo "url: ${{ github.event.client_payload.url }}"
          echo "git_branch: ${{ github.event.client_payload.branch }}"
          echo "manjaro_branch: ${{ github.event.client_payload.manjaro_branch }}"
          echo "extrarepo: ${{ github.event.client_payload.extrarepo }}"
          
          # echo "new manjaro_branch: ${{ env.manjaro_branch }}"
          
      - name: Makepkg Build and Check
        id: makepkg
        # You may pin to the exact commit or the version.
        uses: BigLinux-Package-Build/build-package@main
        with:
          # package: pkgbuild
          manjaro_branch: ${{ env.manjaro_branch }}
          git_branch: ${{ github.event.client_payload.branch }}
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.PASSPHRASE }}
          extrarepo: ${{ github.event.client_payload.extrarepo }}
          extrapackage: ${{ github.event.client_payload.extrapackage }}
          tmate: ${{ inputs.debug_enabled }}
          repo-mirror: ${{ secrets.REPO_MIRROR }}
          repo-dev: ${{ secrets.REPO_DEV }}
          
      # # Tmate ##
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
        
      - name: Publish Package on GitHub
        shell: bash #-O extglob {0}
        env:
          URL: ${{ github.event.client_payload.url }}
          BRANCH: ${{ github.event.client_payload.branch }}
        run: |
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          ls -lh
          
          if [ -n "$(grep linux-zen <<< $gitfolder)" ];then
            exit 0
          fi
          
          #Release#
          echo "Release"
          source PKGBUILD
          release=${pkgname}-${pkgver}-${pkgrel}
          
          # if [ -n "$(grep https://github.com/biglinux/ <<< $URL)" -a -n "$(grep stable <<< $BRANCH)" ]; then
          #   echo ${{ secrets.TOKEN_RELEASE }} | gh auth login --with-token
          #   repo=$(sed 's|https://github.com/||' <<< $URL)
          # elif [ -n "$(grep https://github.com/xivastudio/ <<< $URL)" -a -n "$(grep stable <<< $BRANCH)" ]; then
          #   echo ${{ secrets.TOKEN_RELEASE }} | gh auth login --with-token
          #   repo=$(sed 's|https://github.com/||' <<< $URL)
          # else
          #   echo ${{ github.token }} | gh auth login --with-token
          #   # token=${{ github.token }}
          #   repo=${{ github.repository }}
          # fi
          
          echo "If repos"
          # Se for repo stable mandar release para o github do biglinux, se for testing ou development mandar para o release do package-build
          if [ -n "$(grep -i biglinux <<< $URL)" ];then
            if [ -n "$(grep stable <<< $BRANCH)" -o -n "$(grep xanmod <<< $URL)" ];then
              echo ${{ secrets.TOKEN_RELEASE }} | gh auth login --with-token
              repo=$(sed 's|https://github.com/||' <<< $URL)
            fi
          else
            echo ${{ github.token }} | gh auth login --with-token
            repo=${{ github.repository }}
          fi
          
          echo "gh release create"
          gh release create ${release} --title ${release} --repo ${repo} --notes "automated release from $URL" || echo "release already exists"
          GITHUB_LINK=https://github.com/${repo}/releases/download/${release}
          echo "gh release upload"
          for i in .zst .sig .tar .md5; do
            find -iname "*$i" -exec gh release upload ${release} --repo ${repo} --clobber {} \;
          done
      
      - name: Push to Repo
        shell: bash
        env:
          URL: ${{ github.event.client_payload.url }}
          BRANCH: ${{ github.event.client_payload.branch }}
          MANJARO_BRANCH: ${{ github.event.client_payload.manjaro_branch }}
        run: |
          echo "## ssh setup"
          mkdir -p /home/runner/.ssh
          > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          #ssh-agent -a /tmp/ssh_agent.sock > /dev/null
          echo "${{ secrets.PKGBUILD_KEY }}" >> /home/runner/.ssh/github_actions
          eval `ssh-agent -s`
          ssh-add /home/runner/.ssh/github_actions
          ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} ${{ secrets.PKGBUILD_HOST }} >> /home/runner/.ssh/known_hosts
          ip=${{ secrets.PKGBUILD_HOST }}
          # ip=$(ssh ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }} -p ${{ secrets.PKGBUILD_PORT }} 'echo $(curl -s ident.me) | tail -n1')
          # ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} $ip >> /home/runner/.ssh/known_hosts
          
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          ls -lh
          if [ -n "$(grep testing <<< $MANJARO_BRANCH)" -o -n "$(grep manjaro-testing <<< $BRANCH)" ]; then
            branch=manjaro-testing
            echo "1"
          elif [ -n "$MANJARO_BRANCH" ]; then
            echo "2"
            #cancel push to repo
            curl -s -H "Authorization: token ${{ github.token }}" \
            -X POST "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel"
            sleep infinity
          elif [ -n "$(grep xanmod <<< $URL)" ]; then
            branch=testing
            echo "3"
          elif [ -n "$(grep update-stable <<< $BRANCH)" ]; then
            branch=update-stable
            echo "4"
          elif [ -n "$(grep update-testing <<< $BRANCH)" ]; then
            branch=update-testing
            echo "5"
          elif [ -n "$(grep unstable <<< $BRANCH)" -o -n "$(grep development <<< $BRANCH)" ];then
            branch=${{ secrets.REPO_UNSTABLE }}
            echo "6"
          elif [ -n "$(grep testing <<< $BRANCH)" ];then
            branch=testing
            echo "7"
          elif [ -n "$(grep stable <<< $BRANCH)" ];then
            branch=stable
            echo "8"
          # elif [ -n "$(grep https://github.com/xivastudio/ <<< $URL)" ]; then
          #   #cancel push to repo
          #   curl -s -H "Authorization: token ${{ github.token }}" \
          #   -X POST "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel"
          #   sleep infinity
          else
            branch=${{ secrets.REPO_UNSTABLE }}
            echo "9"
          fi
          for i in *.zst *.sig *.md5; do
          test -e $i && rsync -vapz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@$ip:${{ secrets.PKGBUILD_DIR }}/$branch/x86_64
          sleep 10
          done
          exit 0
      
      # # Tmate ##
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
          
      - name: Telegram Alert Fail
        # if: ${{ failure() || cancelled() }}
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ðŸš¨ FALHA ao criar Pacote: ${{ github.event.action }} a partir do branch ${{ github.ref_name }}, link do erro: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} ðŸ–¥", "disable_notification": false}' ${{ secrets.MESSAGE_BOT_KEY }}
          
        ## Tmate ##
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3 
          
        
#      - name: upload-cdn77
#        shell: bash -O extglob {0}
#        run: |
#          # if is not yet supported in composite https://github.com/actions/runner/blob/main/docs/adrs/0549-composite-run-steps.md#if-condition
#          if [ -z "${{ inputs.cdn77-host }}" ] || [ -z "${{ inputs.cdn77-user }}" ] || [ -z "${{ inputs.cdn77-pwd }}" ]; then 
#            echo "## not (all) credentials given for cdn77 upload"
#            exit 0
#          fi
#          
#          echo "## cdn77 upload"
#          
#          ssh-keyscan -t rsa ${{ inputs.cdn77-host }} >> /home/runner/.ssh/known_hosts
#          ## create target dir
#          sshpass -p "${{ inputs.cdn77-pwd }}" rsync -vaP --stats -e ssh ${{ inputs.edition }} \
#            ${{ inputs.cdn77-user }}@${{ inputs.cdn77-host }}:/www/
#          # upload
#          sshpass -p "${{ inputs.cdn77-pwd }}" rsync -vaP \
#            --stats -e ssh ${{ steps.upload-prepare.outputs.upload-files }} \
#            ${{ inputs.cdn77-user }}@${{ inputs.cdn77-host }}:/www/${{ inputs.edition }}/${{ inputs.version }}/
